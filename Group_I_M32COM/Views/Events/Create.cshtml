@model Group_I_M32COM.DbTableModel.Event
@using Microsoft.AspNetCore.Identity
@using Group_I_M32COM.Data
@using static Group_I_M32COM.Helpers.Data_RolesEnum

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext _context

@{
    ViewData["Title"] = "Create";
    if (SignInManager.IsSignedIn(User))
    {
        string user_id = UserManager.GetUserId(User);
        var applicationUser = from r in _context.Roles
                              join ru in _context.UserRoles on r.Id equals ru.RoleId
                              join u in _context.Users on ru.UserId equals u.Id
                              where u.Id == user_id
                              select new User_RoleModel
                              {
                                  Role_Name = r.Name

                              };
        foreach (var item in applicationUser)
        {
            if (item.Role_Name == Role_Enum.TeamLeader.ToString())
            {
                Layout = "~/Views/Competitor/_EventLayout.cshtml";
            }
            else
            {
                Layout = "~/Views/Admin/_AdminLayout.cshtml";
            }
        }

    }
}

<h2>Create</h2>

<h4>Event</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Event_name" class="control-label"></label>
                <input asp-for="Event_name" class="form-control" />
                <span asp-validation-for="Event_name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event_description" class="control-label"></label>
                <input asp-for="Event_description" class="form-control" />
                <span asp-validation-for="Event_description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event_Types" class="control-label"></label>
                <select class="form-control" asp-for="Event_Types">
                    @foreach (var type in ViewBag.Event_type as IEnumerable<SelectListItem>)
                    {
                        <option value="@type.Value">@type.Text</option>
                    }
                </select>
                <span asp-validation-for="Event_Types" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Boat_Types" class="control-label"></label>
                <select class="form-control" asp-for="Boat_Types">
                    @foreach (var type in ViewBag.Boat_type as IEnumerable<SelectListItem>)
                    {
                        <option value="@type.Value">@type.Text</option>
                    }
                </select>
                <span asp-validation-for="Boat_Types" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event_Start_date" class="control-label"></label>
                <input asp-for="Event_Start_date" class="form-control" />
                <span asp-validation-for="Event_Start_date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event_End_date" class="control-label"></label>
                <input asp-for="Event_End_date" class="form-control" />
                <span asp-validation-for="Event_End_date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
